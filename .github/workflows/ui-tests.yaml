name: "UI Tests"

on:
  workflow_dispatch:
  push:
    branches: [master]

jobs:
  ui_tests:
    runs-on: ${{ matrix.os }}
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        include:     
        - version: '17.2'
          runtime: 'iOS-17-2'
          device: 'iPhone 15'
          displayname: 'iPhone-15'
          os: 'macos-13'
          xcode_version: '15.0'
          needs_custom_sim: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Cancel Previous Runs
        uses: n1hility/cancel-previous-runs@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install QEMU 9.0.2
        uses: docker/actions-toolkit/.github/actions/macos-setup-qemu@19ca9ade20f5da695f76a10988d6532058575f82
      - name: Set up Docker
        uses: crazy-max/ghaction-setup-docker@v3
      - name: Prepare custom devices
        run: |
          sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes

      - name: Select Xcode ${{ matrix.xcode_version }}
        if: matrix.xcode_version != ''
        run: |
          ls /Applications/Xcode_*.app
          sudo xcode-select -s /Applications/Xcode_${xcode_version}.app/Contents/Developer
        env:
          xcode_version: ${{ matrix.xcode_version }}

      - name: Download simulator if needed (${{ matrix.version }})
        if: matrix.needs_custom_sim
        run: |
          xcversion simulators --install="iOS ${version}"
        env:
          version: ${{ matrix.version }}

      - name: Create simulator ${{ matrix.version }}
        run: |
          xcrun simctl list devices ${version}
          xcrun simctl create ${displayname} "${device}" "com.apple.CoreSimulator.SimRuntime.${runtime}"
        env:
          version: ${{ matrix.version }}
          displayname: ${{ matrix.displayname }}
          device: ${{ matrix.device }}
          runtime: ${{ matrix.runtime }}
      - name: Build Dependencies
        run: |
          mvn --version
      - name: Build and UI Test
        run: xcodebuild build test -project ${project} -scheme "${scheme}" -testPlan "${testPlan}" ${params} -destination "${destination}" ## | xcpretty --utf --color && exit ${PIPESTATUS[0]}
        env:
          project: 'SonariOS.xcodeproj'
          params: "-skipPackagePluginValidation -derivedDataPath Build/"
          scheme: 'UITests'
          testPlan: 'UITests'
          destination: "OS=${{ matrix.version }},name=${{ matrix.displayname }}"
      - name: Archive test script logs
        if: '!cancelled()'
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: |
            pretest.log
            posttest.log
            Build/Logs/Test/Run-UITests-*.xcresult
            output.txt
